// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msgmove.proto

#ifndef PROTOBUF_msgmove_2eproto__INCLUDED
#define PROTOBUF_msgmove_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msgmove_2eproto();
void protobuf_AssignDesc_msgmove_2eproto();
void protobuf_ShutdownFile_msgmove_2eproto();

class msgmove;

// ===================================================================

class msgmove : public ::google::protobuf::Message {
 public:
  msgmove();
  virtual ~msgmove();

  msgmove(const msgmove& from);

  inline msgmove& operator=(const msgmove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msgmove& default_instance();

  void Swap(msgmove* other);

  // implements Message ----------------------------------------------

  msgmove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msgmove& from);
  void MergeFrom(const msgmove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float sx = 1;
  inline bool has_sx() const;
  inline void clear_sx();
  static const int kSxFieldNumber = 1;
  inline float sx() const;
  inline void set_sx(float value);

  // required float sy = 2;
  inline bool has_sy() const;
  inline void clear_sy();
  static const int kSyFieldNumber = 2;
  inline float sy() const;
  inline void set_sy(float value);

  // required float speed = 3;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 3;
  inline float speed() const;
  inline void set_speed(float value);

  // required float ex = 4;
  inline bool has_ex() const;
  inline void clear_ex();
  static const int kExFieldNumber = 4;
  inline float ex() const;
  inline void set_ex(float value);

  // required float ey = 5;
  inline bool has_ey() const;
  inline void clear_ey();
  static const int kEyFieldNumber = 5;
  inline float ey() const;
  inline void set_ey(float value);

  // optional int64 delay = 6;
  inline bool has_delay() const;
  inline void clear_delay();
  static const int kDelayFieldNumber = 6;
  inline ::google::protobuf::int64 delay() const;
  inline void set_delay(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.msgmove)
 private:
  inline void set_has_sx();
  inline void clear_has_sx();
  inline void set_has_sy();
  inline void clear_has_sy();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_ex();
  inline void clear_has_ex();
  inline void set_has_ey();
  inline void clear_has_ey();
  inline void set_has_delay();
  inline void clear_has_delay();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float sx_;
  float sy_;
  float speed_;
  float ex_;
  ::google::protobuf::int64 delay_;
  float ey_;
  friend void  protobuf_AddDesc_msgmove_2eproto();
  friend void protobuf_AssignDesc_msgmove_2eproto();
  friend void protobuf_ShutdownFile_msgmove_2eproto();

  void InitAsDefaultInstance();
  static msgmove* default_instance_;
};
// ===================================================================


// ===================================================================

// msgmove

// required float sx = 1;
inline bool msgmove::has_sx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msgmove::set_has_sx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msgmove::clear_has_sx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msgmove::clear_sx() {
  sx_ = 0;
  clear_has_sx();
}
inline float msgmove::sx() const {
  // @@protoc_insertion_point(field_get:proto.msgmove.sx)
  return sx_;
}
inline void msgmove::set_sx(float value) {
  set_has_sx();
  sx_ = value;
  // @@protoc_insertion_point(field_set:proto.msgmove.sx)
}

// required float sy = 2;
inline bool msgmove::has_sy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msgmove::set_has_sy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msgmove::clear_has_sy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msgmove::clear_sy() {
  sy_ = 0;
  clear_has_sy();
}
inline float msgmove::sy() const {
  // @@protoc_insertion_point(field_get:proto.msgmove.sy)
  return sy_;
}
inline void msgmove::set_sy(float value) {
  set_has_sy();
  sy_ = value;
  // @@protoc_insertion_point(field_set:proto.msgmove.sy)
}

// required float speed = 3;
inline bool msgmove::has_speed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msgmove::set_has_speed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msgmove::clear_has_speed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msgmove::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline float msgmove::speed() const {
  // @@protoc_insertion_point(field_get:proto.msgmove.speed)
  return speed_;
}
inline void msgmove::set_speed(float value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:proto.msgmove.speed)
}

// required float ex = 4;
inline bool msgmove::has_ex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msgmove::set_has_ex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msgmove::clear_has_ex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msgmove::clear_ex() {
  ex_ = 0;
  clear_has_ex();
}
inline float msgmove::ex() const {
  // @@protoc_insertion_point(field_get:proto.msgmove.ex)
  return ex_;
}
inline void msgmove::set_ex(float value) {
  set_has_ex();
  ex_ = value;
  // @@protoc_insertion_point(field_set:proto.msgmove.ex)
}

// required float ey = 5;
inline bool msgmove::has_ey() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msgmove::set_has_ey() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msgmove::clear_has_ey() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msgmove::clear_ey() {
  ey_ = 0;
  clear_has_ey();
}
inline float msgmove::ey() const {
  // @@protoc_insertion_point(field_get:proto.msgmove.ey)
  return ey_;
}
inline void msgmove::set_ey(float value) {
  set_has_ey();
  ey_ = value;
  // @@protoc_insertion_point(field_set:proto.msgmove.ey)
}

// optional int64 delay = 6;
inline bool msgmove::has_delay() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void msgmove::set_has_delay() {
  _has_bits_[0] |= 0x00000020u;
}
inline void msgmove::clear_has_delay() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void msgmove::clear_delay() {
  delay_ = GOOGLE_LONGLONG(0);
  clear_has_delay();
}
inline ::google::protobuf::int64 msgmove::delay() const {
  // @@protoc_insertion_point(field_get:proto.msgmove.delay)
  return delay_;
}
inline void msgmove::set_delay(::google::protobuf::int64 value) {
  set_has_delay();
  delay_ = value;
  // @@protoc_insertion_point(field_set:proto.msgmove.delay)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msgmove_2eproto__INCLUDED
